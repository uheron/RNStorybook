{"ast":null,"code":"var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:true});exports.createStringifySafeWithLimits=createStringifySafeWithLimits;exports.default=void 0;var _invariant=_interopRequireDefault(require(\"invariant\"));function createStringifySafeWithLimits(limits){var _limits$maxDepth=limits.maxDepth,maxDepth=_limits$maxDepth===void 0?Number.POSITIVE_INFINITY:_limits$maxDepth,_limits$maxStringLimi=limits.maxStringLimit,maxStringLimit=_limits$maxStringLimi===void 0?Number.POSITIVE_INFINITY:_limits$maxStringLimi,_limits$maxArrayLimit=limits.maxArrayLimit,maxArrayLimit=_limits$maxArrayLimit===void 0?Number.POSITIVE_INFINITY:_limits$maxArrayLimit,_limits$maxObjectKeys=limits.maxObjectKeysLimit,maxObjectKeysLimit=_limits$maxObjectKeys===void 0?Number.POSITIVE_INFINITY:_limits$maxObjectKeys;var stack=[];function replacer(key,value){while(stack.length&&this!==stack[0]){stack.shift();}if(typeof value==='string'){var truncatedString='...(truncated)...';if(value.length>maxStringLimit+truncatedString.length){return value.substring(0,maxStringLimit)+truncatedString;}return value;}if(typeof value!=='object'||value===null){return value;}var retval=value;if(Array.isArray(value)){if(stack.length>=maxDepth){retval=\"[ ... array with \"+value.length+\" values ... ]\";}else if(value.length>maxArrayLimit){retval=value.slice(0,maxArrayLimit).concat([\"... extra \"+(value.length-maxArrayLimit)+\" values truncated ...\"]);}}else{(0,_invariant.default)(typeof value==='object','This was already found earlier');var keys=Object.keys(value);if(stack.length>=maxDepth){retval=\"{ ... object with \"+keys.length+\" keys ... }\";}else if(keys.length>maxObjectKeysLimit){retval={};for(var k of keys.slice(0,maxObjectKeysLimit)){retval[k]=value[k];}var truncatedKey='...(truncated keys)...';retval[truncatedKey]=keys.length-maxObjectKeysLimit;}}stack.unshift(retval);return retval;}return function stringifySafe(arg){if(arg===undefined){return'undefined';}else if(arg===null){return'null';}else if(typeof arg==='function'){try{return arg.toString();}catch(e){return'[function unknown]';}}else if(arg instanceof Error){return arg.name+': '+arg.message;}else{try{var ret=JSON.stringify(arg,replacer);if(ret===undefined){return'[\"'+typeof arg+'\" failed to stringify]';}return ret;}catch(e){if(typeof arg.toString==='function'){try{return arg.toString();}catch(E){}}}}return'[\"'+typeof arg+'\" failed to stringify]';};}var stringifySafe=createStringifySafeWithLimits({maxDepth:10,maxStringLimit:100,maxArrayLimit:50,maxObjectKeysLimit:50});var _default=stringifySafe;exports.default=_default;","map":{"version":3,"sources":["/Users/uheron/IH/RNStorybook/node_modules/react-native/Libraries/Utilities/stringifySafe.js"],"names":["createStringifySafeWithLimits","limits","maxDepth","Number","POSITIVE_INFINITY","maxStringLimit","maxArrayLimit","maxObjectKeysLimit","stack","replacer","key","value","length","shift","truncatedString","substring","retval","Array","isArray","slice","concat","keys","Object","k","truncatedKey","unshift","stringifySafe","arg","undefined","toString","e","Error","name","message","ret","JSON","stringify","E"],"mappings":"uOAUA,4DAMO,QAASA,CAAAA,6BAAT,CAAuCC,MAAvC,CAKc,CACnB,qBAKIA,MALJ,CACEC,QADF,CACEA,QADF,2BACaC,MAAM,CAACC,iBADpB,wCAKIH,MALJ,CAEEI,cAFF,CAEEA,cAFF,gCAEmBF,MAAM,CAACC,iBAF1B,6CAKIH,MALJ,CAGEK,aAHF,CAGEA,aAHF,gCAGkBH,MAAM,CAACC,iBAHzB,6CAKIH,MALJ,CAIEM,kBAJF,CAIEA,kBAJF,gCAIuBJ,MAAM,CAACC,iBAJ9B,uBAMA,GAAMI,CAAAA,KAAK,CAAG,EAAd,CAGA,QAASC,CAAAA,QAAT,CAAkBC,GAAlB,CAA+BC,KAA/B,CAAoD,CAClD,MAAOH,KAAK,CAACI,MAAN,EAAgB,OAASJ,KAAK,CAAC,CAAD,CAArC,CAA0C,CACxCA,KAAK,CAACK,KAAN,GACD,CAED,GAAI,MAAOF,CAAAA,KAAP,GAAiB,QAArB,CAA+B,CAC7B,GAAMG,CAAAA,eAAe,CAAG,mBAAxB,CACA,GAAIH,KAAK,CAACC,MAAN,CAAeP,cAAc,CAAGS,eAAe,CAACF,MAApD,CAA4D,CAC1D,MAAOD,CAAAA,KAAK,CAACI,SAAN,CAAgB,CAAhB,CAAmBV,cAAnB,EAAqCS,eAA5C,CACD,CACD,MAAOH,CAAAA,KAAP,CACD,CACD,GAAI,MAAOA,CAAAA,KAAP,GAAiB,QAAjB,EAA6BA,KAAK,GAAK,IAA3C,CAAiD,CAC/C,MAAOA,CAAAA,KAAP,CACD,CAED,GAAIK,CAAAA,MAGqD,CAAGL,KAH5D,CAIA,GAAIM,KAAK,CAACC,OAAN,CAAcP,KAAd,CAAJ,CAA0B,CACxB,GAAIH,KAAK,CAACI,MAAN,EAAgBV,QAApB,CAA8B,CAC5Bc,MAAM,qBAAuBL,KAAK,CAACC,MAA7B,gBAAN,CACD,CAFD,IAEO,IAAID,KAAK,CAACC,MAAN,CAAeN,aAAnB,CAAkC,CACvCU,MAAM,CAAGL,KAAK,CACXQ,KADM,CACA,CADA,CACGb,aADH,EAENc,MAFM,CAEC,eACOT,KAAK,CAACC,MAAN,CAAeN,aADtB,0BAFD,CAAT,CAKD,CACF,CAVD,IAUO,CAEL,uBAAU,MAAOK,CAAAA,KAAP,GAAiB,QAA3B,CAAqC,gCAArC,EACA,GAAIU,CAAAA,IAAI,CAAGC,MAAM,CAACD,IAAP,CAAYV,KAAZ,CAAX,CACA,GAAIH,KAAK,CAACI,MAAN,EAAgBV,QAApB,CAA8B,CAC5Bc,MAAM,sBAAwBK,IAAI,CAACT,MAA7B,cAAN,CACD,CAFD,IAEO,IAAIS,IAAI,CAACT,MAAL,CAAcL,kBAAlB,CAAsC,CAE3CS,MAAM,CAAI,EAAV,CACA,IAAK,GAAIO,CAAAA,CAAT,GAAcF,CAAAA,IAAI,CAACF,KAAL,CAAW,CAAX,CAAcZ,kBAAd,CAAd,CAAiD,CAC/CS,MAAM,CAACO,CAAD,CAAN,CAAYZ,KAAK,CAACY,CAAD,CAAjB,CACD,CACD,GAAMC,CAAAA,YAAY,CAAG,wBAArB,CACAR,MAAM,CAACQ,YAAD,CAAN,CAAuBH,IAAI,CAACT,MAAL,CAAcL,kBAArC,CACD,CACF,CACDC,KAAK,CAACiB,OAAN,CAAcT,MAAd,EACA,MAAOA,CAAAA,MAAP,CACD,CAED,MAAO,SAASU,CAAAA,aAAT,CAAuBC,GAAvB,CAA2C,CAChD,GAAIA,GAAG,GAAKC,SAAZ,CAAuB,CACrB,MAAO,WAAP,CACD,CAFD,IAEO,IAAID,GAAG,GAAK,IAAZ,CAAkB,CACvB,MAAO,MAAP,CACD,CAFM,IAEA,IAAI,MAAOA,CAAAA,GAAP,GAAe,UAAnB,CAA+B,CACpC,GAAI,CACF,MAAOA,CAAAA,GAAG,CAACE,QAAJ,EAAP,CACD,CAAC,MAAOC,CAAP,CAAU,CACV,MAAO,oBAAP,CACD,CACF,CANM,IAMA,IAAIH,GAAG,WAAYI,CAAAA,KAAnB,CAA0B,CAC/B,MAAOJ,CAAAA,GAAG,CAACK,IAAJ,CAAW,IAAX,CAAkBL,GAAG,CAACM,OAA7B,CACD,CAFM,IAEA,CAGL,GAAI,CACF,GAAMC,CAAAA,GAAG,CAAGC,IAAI,CAACC,SAAL,CAAeT,GAAf,CAAoBlB,QAApB,CAAZ,CACA,GAAIyB,GAAG,GAAKN,SAAZ,CAAuB,CACrB,MAAO,KAAO,MAAOD,CAAAA,GAAd,CAAoB,wBAA3B,CACD,CACD,MAAOO,CAAAA,GAAP,CACD,CAAC,MAAOJ,CAAP,CAAU,CACV,GAAI,MAAOH,CAAAA,GAAG,CAACE,QAAX,GAAwB,UAA5B,CAAwC,CACtC,GAAI,CAEF,MAAOF,CAAAA,GAAG,CAACE,QAAJ,EAAP,CACD,CAAC,MAAOQ,CAAP,CAAU,CAAE,CACf,CACF,CACF,CACD,MAAO,KAAO,MAAOV,CAAAA,GAAd,CAAoB,wBAA3B,CACD,CAhCD,CAiCD,CAED,GAAMD,CAAAA,aAA8B,CAAG1B,6BAA6B,CAAC,CACnEE,QAAQ,CAAE,EADyD,CAEnEG,cAAc,CAAE,GAFmD,CAGnEC,aAAa,CAAE,EAHoD,CAInEC,kBAAkB,CAAE,EAJ+C,CAAD,CAApE,C,aAOemB,a","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\nimport invariant from 'invariant';\n\n/**\n * Tries to stringify with JSON.stringify and toString, but catches exceptions\n * (e.g. from circular objects) and always returns a string and never throws.\n */\nexport function createStringifySafeWithLimits(limits: {|\n  maxDepth?: number,\n  maxStringLimit?: number,\n  maxArrayLimit?: number,\n  maxObjectKeysLimit?: number,\n|}): mixed => string {\n  const {\n    maxDepth = Number.POSITIVE_INFINITY,\n    maxStringLimit = Number.POSITIVE_INFINITY,\n    maxArrayLimit = Number.POSITIVE_INFINITY,\n    maxObjectKeysLimit = Number.POSITIVE_INFINITY,\n  } = limits;\n  const stack = [];\n  /* $FlowFixMe[missing-this-annot] The 'this' type annotation(s) required by\n   * Flow's LTI update could not be added via codemod */\n  function replacer(key: string, value: mixed): mixed {\n    while (stack.length && this !== stack[0]) {\n      stack.shift();\n    }\n\n    if (typeof value === 'string') {\n      const truncatedString = '...(truncated)...';\n      if (value.length > maxStringLimit + truncatedString.length) {\n        return value.substring(0, maxStringLimit) + truncatedString;\n      }\n      return value;\n    }\n    if (typeof value !== 'object' || value === null) {\n      return value;\n    }\n\n    let retval:\n      | string\n      | {+[string]: mixed}\n      | $TEMPORARY$object<{'...(truncated keys)...': number}> = value;\n    if (Array.isArray(value)) {\n      if (stack.length >= maxDepth) {\n        retval = `[ ... array with ${value.length} values ... ]`;\n      } else if (value.length > maxArrayLimit) {\n        retval = value\n          .slice(0, maxArrayLimit)\n          .concat([\n            `... extra ${value.length - maxArrayLimit} values truncated ...`,\n          ]);\n      }\n    } else {\n      // Add refinement after Array.isArray call.\n      invariant(typeof value === 'object', 'This was already found earlier');\n      let keys = Object.keys(value);\n      if (stack.length >= maxDepth) {\n        retval = `{ ... object with ${keys.length} keys ... }`;\n      } else if (keys.length > maxObjectKeysLimit) {\n        // Return a sample of the keys.\n        retval = ({}: {[string]: mixed});\n        for (let k of keys.slice(0, maxObjectKeysLimit)) {\n          retval[k] = value[k];\n        }\n        const truncatedKey = '...(truncated keys)...';\n        retval[truncatedKey] = keys.length - maxObjectKeysLimit;\n      }\n    }\n    stack.unshift(retval);\n    return retval;\n  }\n\n  return function stringifySafe(arg: mixed): string {\n    if (arg === undefined) {\n      return 'undefined';\n    } else if (arg === null) {\n      return 'null';\n    } else if (typeof arg === 'function') {\n      try {\n        return arg.toString();\n      } catch (e) {\n        return '[function unknown]';\n      }\n    } else if (arg instanceof Error) {\n      return arg.name + ': ' + arg.message;\n    } else {\n      // Perform a try catch, just in case the object has a circular\n      // reference or stringify throws for some other reason.\n      try {\n        const ret = JSON.stringify(arg, replacer);\n        if (ret === undefined) {\n          return '[\"' + typeof arg + '\" failed to stringify]';\n        }\n        return ret;\n      } catch (e) {\n        if (typeof arg.toString === 'function') {\n          try {\n            // $FlowFixMe[incompatible-use] : toString shouldn't take any arguments in general.\n            return arg.toString();\n          } catch (E) {}\n        }\n      }\n    }\n    return '[\"' + typeof arg + '\" failed to stringify]';\n  };\n}\n\nconst stringifySafe: mixed => string = createStringifySafeWithLimits({\n  maxDepth: 10,\n  maxStringLimit: 100,\n  maxArrayLimit: 50,\n  maxObjectKeysLimit: 50,\n});\n\nexport default stringifySafe;\n"]},"metadata":{},"sourceType":"script"}