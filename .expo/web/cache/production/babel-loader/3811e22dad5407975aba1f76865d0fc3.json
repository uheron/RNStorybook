{"ast":null,"code":"'use strict';var invariant=require('invariant');var TRACE_TAG_REACT_APPS=1<<17;var TRACE_TAG_JS_VM_CALLS=1<<27;var _enabled=false;var _asyncCookie=0;var _markStack=[];var _markStackIndex=-1;var _canInstallReactHook=false;var REACT_MARKER=\"\\u269B\";var userTimingPolyfill=__DEV__?{mark:function mark(markName){if(_enabled){_markStackIndex++;_markStack[_markStackIndex]=markName;var systraceLabel=markName;if(markName[0]===REACT_MARKER){var indexOfId=markName.lastIndexOf(' (#');var cutoffIndex=indexOfId!==-1?indexOfId:markName.length;systraceLabel=markName.slice(2,cutoffIndex);}Systrace.beginEvent(systraceLabel);}},measure:function measure(measureName,startMark,endMark){if(_enabled){invariant(typeof measureName==='string'&&typeof startMark==='string'&&typeof endMark==='undefined','Only performance.measure(string, string) overload is supported.');var topMark=_markStack[_markStackIndex];invariant(startMark===topMark,'There was a mismatching performance.measure() call. '+'Expected \"%s\" but got \"%s.\"',topMark,startMark);_markStackIndex--;Systrace.endEvent();}},clearMarks:function clearMarks(markName){if(_enabled){if(_markStackIndex===-1){return;}if(markName===_markStack[_markStackIndex]){if(userTimingPolyfill!=null){userTimingPolyfill.measure(markName,markName);}}}},clearMeasures:function clearMeasures(){}}:null;function installPerformanceHooks(polyfill){if(polyfill){if(global.performance===undefined){global.performance={};}Object.keys(polyfill).forEach(function(methodName){if(typeof global.performance[methodName]!=='function'){global.performance[methodName]=polyfill[methodName];}});}}var Systrace={installReactHook:function installReactHook(){if(_enabled){if(__DEV__){installPerformanceHooks(userTimingPolyfill);}}_canInstallReactHook=true;},setEnabled:function setEnabled(enabled){if(_enabled!==enabled){if(__DEV__){if(enabled){global.nativeTraceBeginLegacy&&global.nativeTraceBeginLegacy(TRACE_TAG_JS_VM_CALLS);}else{global.nativeTraceEndLegacy&&global.nativeTraceEndLegacy(TRACE_TAG_JS_VM_CALLS);}if(_canInstallReactHook){if(enabled){installPerformanceHooks(userTimingPolyfill);}}}_enabled=enabled;}},isEnabled:function isEnabled(){return _enabled;},beginEvent:function beginEvent(profileName,args){if(_enabled){var profileNameString=typeof profileName==='function'?profileName():profileName;global.nativeTraceBeginSection(TRACE_TAG_REACT_APPS,profileNameString,args);}},endEvent:function endEvent(){if(_enabled){global.nativeTraceEndSection(TRACE_TAG_REACT_APPS);}},beginAsyncEvent:function beginAsyncEvent(profileName){var cookie=_asyncCookie;if(_enabled){_asyncCookie++;var profileNameString=typeof profileName==='function'?profileName():profileName;global.nativeTraceBeginAsyncSection(TRACE_TAG_REACT_APPS,profileNameString,cookie);}return cookie;},endAsyncEvent:function endAsyncEvent(profileName,cookie){if(_enabled){var profileNameString=typeof profileName==='function'?profileName():profileName;global.nativeTraceEndAsyncSection(TRACE_TAG_REACT_APPS,profileNameString,cookie);}},counterEvent:function counterEvent(profileName,value){if(_enabled){var profileNameString=typeof profileName==='function'?profileName():profileName;global.nativeTraceCounter&&global.nativeTraceCounter(TRACE_TAG_REACT_APPS,profileNameString,value);}}};if(__DEV__){global[(global.__METRO_GLOBAL_PREFIX__||'')+'__SYSTRACE']=Systrace;}module.exports=Systrace;","map":{"version":3,"sources":["/Users/uheron/IH/RNStorybook/node_modules/react-native/Libraries/Performance/Systrace.js"],"names":["invariant","require","TRACE_TAG_REACT_APPS","TRACE_TAG_JS_VM_CALLS","_enabled","_asyncCookie","_markStack","_markStackIndex","_canInstallReactHook","REACT_MARKER","userTimingPolyfill","__DEV__","mark","markName","systraceLabel","indexOfId","lastIndexOf","cutoffIndex","length","slice","Systrace","beginEvent","measure","measureName","startMark","endMark","topMark","endEvent","clearMarks","clearMeasures","installPerformanceHooks","polyfill","global","performance","undefined","Object","keys","forEach","methodName","installReactHook","setEnabled","enabled","nativeTraceBeginLegacy","nativeTraceEndLegacy","isEnabled","profileName","args","profileNameString","nativeTraceBeginSection","nativeTraceEndSection","beginAsyncEvent","cookie","nativeTraceBeginAsyncSection","endAsyncEvent","nativeTraceEndAsyncSection","counterEvent","value","nativeTraceCounter","__METRO_GLOBAL_PREFIX__","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict\n * @format\n */\n\n'use strict';\n\nconst invariant = require('invariant');\n\nconst TRACE_TAG_REACT_APPS = 1 << 17; // eslint-disable-line no-bitwise\nconst TRACE_TAG_JS_VM_CALLS = 1 << 27; // eslint-disable-line no-bitwise\n\nlet _enabled = false;\nlet _asyncCookie = 0;\nconst _markStack = [];\nlet _markStackIndex = -1;\nlet _canInstallReactHook = false;\n\n// Implements a subset of User Timing API necessary for React measurements.\n// https://developer.mozilla.org/en-US/docs/Web/API/User_Timing_API\nconst REACT_MARKER = '\\u269B';\nconst userTimingPolyfill = __DEV__\n  ? {\n      mark(markName: string) {\n        if (_enabled) {\n          _markStackIndex++;\n          _markStack[_markStackIndex] = markName;\n          let systraceLabel = markName;\n          // Since perf measurements are a shared namespace in User Timing API,\n          // we prefix all React results with a React emoji.\n          if (markName[0] === REACT_MARKER) {\n            // This is coming from React.\n            // Removing component IDs keeps trace colors stable.\n            const indexOfId = markName.lastIndexOf(' (#');\n            const cutoffIndex = indexOfId !== -1 ? indexOfId : markName.length;\n            // Also cut off the emoji because it breaks Systrace\n            systraceLabel = markName.slice(2, cutoffIndex);\n          }\n          Systrace.beginEvent(systraceLabel);\n        }\n      },\n      measure(measureName: string, startMark: ?string, endMark: ?string) {\n        if (_enabled) {\n          invariant(\n            typeof measureName === 'string' &&\n              typeof startMark === 'string' &&\n              typeof endMark === 'undefined',\n            'Only performance.measure(string, string) overload is supported.',\n          );\n          const topMark = _markStack[_markStackIndex];\n          invariant(\n            startMark === topMark,\n            'There was a mismatching performance.measure() call. ' +\n              'Expected \"%s\" but got \"%s.\"',\n            topMark,\n            startMark,\n          );\n          _markStackIndex--;\n          // We can't use more descriptive measureName because Systrace doesn't\n          // let us edit labels post factum.\n          Systrace.endEvent();\n        }\n      },\n      clearMarks(markName: string) {\n        if (_enabled) {\n          if (_markStackIndex === -1) {\n            return;\n          }\n          if (markName === _markStack[_markStackIndex]) {\n            // React uses this for \"cancelling\" started measurements.\n            // Systrace doesn't support deleting measurements, so we just stop them.\n            if (userTimingPolyfill != null) {\n              userTimingPolyfill.measure(markName, markName);\n            }\n          }\n        }\n      },\n      clearMeasures() {\n        // React calls this to avoid memory leaks in browsers, but we don't keep\n        // measurements anyway.\n      },\n    }\n  : null;\n\nfunction installPerformanceHooks(\n  polyfill: null | $TEMPORARY$object<{\n    clearMarks(markName: string): void,\n    clearMeasures(): void,\n    mark(markName: string): void,\n    measure(measureName: string, startMark: ?string, endMark: ?string): void,\n  }>,\n) {\n  if (polyfill) {\n    if (global.performance === undefined) {\n      global.performance = {};\n    }\n\n    Object.keys(polyfill).forEach(methodName => {\n      if (typeof global.performance[methodName] !== 'function') {\n        global.performance[methodName] = polyfill[methodName];\n      }\n    });\n  }\n}\n\nconst Systrace = {\n  installReactHook() {\n    if (_enabled) {\n      if (__DEV__) {\n        installPerformanceHooks(userTimingPolyfill);\n      }\n    }\n    _canInstallReactHook = true;\n  },\n\n  setEnabled(enabled: boolean) {\n    if (_enabled !== enabled) {\n      if (__DEV__) {\n        if (enabled) {\n          global.nativeTraceBeginLegacy &&\n            global.nativeTraceBeginLegacy(TRACE_TAG_JS_VM_CALLS);\n        } else {\n          global.nativeTraceEndLegacy &&\n            global.nativeTraceEndLegacy(TRACE_TAG_JS_VM_CALLS);\n        }\n        if (_canInstallReactHook) {\n          if (enabled) {\n            installPerformanceHooks(userTimingPolyfill);\n          }\n        }\n      }\n      _enabled = enabled;\n    }\n  },\n\n  isEnabled(): boolean {\n    return _enabled;\n  },\n\n  /**\n   * beginEvent/endEvent for starting and then ending a profile within the same call stack frame\n   **/\n  beginEvent(\n    profileName?: string | (() => string),\n    args?: {[string]: string, ...},\n  ) {\n    if (_enabled) {\n      const profileNameString =\n        typeof profileName === 'function' ? profileName() : profileName;\n      global.nativeTraceBeginSection(\n        TRACE_TAG_REACT_APPS,\n        profileNameString,\n        args,\n      );\n    }\n  },\n\n  endEvent() {\n    if (_enabled) {\n      global.nativeTraceEndSection(TRACE_TAG_REACT_APPS);\n    }\n  },\n\n  /**\n   * beginAsyncEvent/endAsyncEvent for starting and then ending a profile where the end can either\n   * occur on another thread or out of the current stack frame, eg await\n   * the returned cookie variable should be used as input into the endAsyncEvent call to end the profile\n   **/\n  beginAsyncEvent(profileName?: string | (() => string)): number {\n    const cookie = _asyncCookie;\n    if (_enabled) {\n      _asyncCookie++;\n      const profileNameString =\n        typeof profileName === 'function' ? profileName() : profileName;\n      global.nativeTraceBeginAsyncSection(\n        TRACE_TAG_REACT_APPS,\n        profileNameString,\n        cookie,\n      );\n    }\n    return cookie;\n  },\n\n  endAsyncEvent(profileName?: string | (() => string), cookie?: number) {\n    if (_enabled) {\n      const profileNameString =\n        typeof profileName === 'function' ? profileName() : profileName;\n      global.nativeTraceEndAsyncSection(\n        TRACE_TAG_REACT_APPS,\n        profileNameString,\n        cookie,\n      );\n    }\n  },\n\n  /**\n   * counterEvent registers the value to the profileName on the systrace timeline\n   **/\n  counterEvent(profileName?: string | (() => string), value?: number) {\n    if (_enabled) {\n      const profileNameString =\n        typeof profileName === 'function' ? profileName() : profileName;\n      global.nativeTraceCounter &&\n        global.nativeTraceCounter(\n          TRACE_TAG_REACT_APPS,\n          profileNameString,\n          value,\n        );\n    }\n  },\n};\n\nif (__DEV__) {\n  // The metro require polyfill can not have dependencies (true for all polyfills).\n  // Ensure that `Systrace` is available in polyfill by exposing it globally.\n  global[(global.__METRO_GLOBAL_PREFIX__ || '') + '__SYSTRACE'] = Systrace;\n}\n\nmodule.exports = Systrace;\n"]},"metadata":{},"sourceType":"script"}